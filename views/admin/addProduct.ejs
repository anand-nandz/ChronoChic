<!DOCTYPE html>
<html lang="en">
<!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-form-product-3.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:32 GMT -->

<head>
    <meta charset="utf-8" />
    <title>ChronoChic</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="" />
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/adminassets/imgs/theme/favicon.svg" />
    <!-- Template CSS -->
    <link href="adminassets\css\main.css" rel="stylesheet" type="text/css" />
</head>

<body class="">
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="index.html" class="brand-wrap">
                <img src="/adminassets/imgs/theme/logo.png" class="logo" alt="Evara Dashboard" />
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize">
                    <i class="text-muted material-icons md-menu_open"></i>
                </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item">
                    <a class="menu-link" href="/admin/home">
                        <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item active">
                    <a class="menu-link" href="/admin/products">
                        <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                </li>

                <li class="menu-item ">
                    <a class="menu-link" href="/admin/users">
                        <i class="icon material-icons md-person"></i>
                        <span class="text">Users</span>
                    </a>
                </li>

                <li class="menu-item">
                    <a class="menu-link" href="/admin/category"> <i class="icon material-icons md-stars"></i>
                        <span class="text">category</span> </a>
                </li>

                <!-- <li class="menu-item has-submenu">
                    <a class="menu-link" href="/orders">
                        <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                </li> -->
                <!-- <li class="menu-item has-submenu">
                    <a class="menu-link" href="page-sellers-cards.html">
                        <i class="icon material-icons md-store"></i>
                        <span class="text">Sellers</span>
                    </a>
                </li>
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="page-form-product-1.html">
                        <i class="icon material-icons md-add_box"></i>
                        <span class="text">Add product</span>
                    </a>
                </li> -->
                <!-- <li class="menu-item has-submenu">
                    <a class="menu-link" href="page-transactions-1.html">
                        <i class="icon material-icons md-monetization_on"></i>
                        <span class="text">Transactions</span>
                    </a>
                </li> -->

                <!-- <li class="menu-item">
                    <a class="menu-link" href="page-reviews.html">
                        <i class="icon material-icons md-comment"></i>
                        <span class="text">Reviews</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="page-brands.html">
                        <i class="icon material-icons md-stars"></i>
                        <span class="text">Brands</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" disabled href="#">
                        <i class="icon material-icons md-pie_chart"></i>
                        <span class="text">Statistics</span>
                    </a>
                </li> -->
            </ul>
            <hr />

            <br />
            <br />
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
                <form class="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term" />
                        <button class="btn btn-light bg" type="button">
                            <i class="material-icons md-search"></i>
                        </button>
                    </div>
                </form>
            </div>
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside">
                    <i class="material-icons md-apps"></i>
                </button>
                <ul class="nav">
                    <li class="nav-item">
                        <a class="nav-link btn-icon" href="#">
                            <i class="material-icons md-notifications animation-shake"></i>
                            <span class="badge rounded-pill">0</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link btn-icon darkmode" href="#">
                            <i class="material-icons md-nights_stay"></i>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="requestfullscreen nav-link btn-icon"><i
                                class="material-icons md-cast"></i></a>
                    </li>
                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownLanguage"
                            aria-expanded="false"><i class="material-icons md-public"></i></a>
                        <!-- <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownLanguage">
                            <a class="dropdown-item text-brand" href="#"><img src="/adminassets/imgs/theme/flag-us.png"
                                    alt="English" />English</a>
                            <a class="dropdown-item" href="#"><img src="/adminassets/imgs/theme/flag-fr.png"
                                    alt="Français" />Français</a>
                            <a class="dropdown-item" href="#"><img src="/adminassets/imgs/theme/flag-jp.png"
                                    alt="Français" />日本語</a>
                            <a class="dropdown-item" href="#"><img src="/adminassets/imgs/theme/flag-cn.png"
                                    alt="Français" />中国人</a>
                        </div> -->
                    </li>
                </ul>
            </div>
        </header>
        <form action="/admin/add-product" method="post" enctype="multipart/form-data" id="submitform"
            onsubmit="return validateForm()">
            <section class="content-main">
                <div class="row">
                    <div class="col-9">
                        <div class="content-header">
                            <h2 class="content-title">Add Product</h2>
                            <div>
                                <button type="submit" id="submitButtonId" class="btn btn-md rounded font-sm hover-up">
                                    Publish
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="mb-4">
                                    <label for="product_title" class="form-label">Product title</label>
                                    <input type="text" placeholder="Type here" class="form-control" name="ProductName"
                                        required onblur="validateProductName()" />

                                    <span id="productTitle-error" class="error-message"></span>

                                </div>
                                <div class="row gx-3"></div>

                                <div class="mb-4">
                                    <label for="product_brand" class="form-label">Brand</label>
                                    <input type="text" placeholder="Type here" class="form-control" name="ProductBrand"
                                        required onblur="validateProductBrand()" />

                                    <span id="ProductBrand-error" class="error-message"></span>
                                </div>
                                <div class="mb-4">
                                    <label for="product_category" class="form-label">Category</label>
                                    <select class="form-control" id="category" name="ProductCategory" required>
                                        <option value="" selected>None</option>
                                        <% categories.forEach(function(category) { %>
                                            <option value="<%= category._id %>">
                                                <%= category.name %>
                                            </option>
                                            <% }); %>
                                    </select>

                                    <span id="ProductCategory-error" class="error-message"></span>
                                </div>


                                <div class="mb-4">
                                    <label for="product_color" class="form-label">Color</label>
                                    <input type="text" placeholder="Type here" class="form-control" name="ProductColor"
                                        required onblur="validateProductColor()" />

                                    <span id="ProductColor-error" class="error-message"></span>
                                </div>
                                <div class="mb-4">
                                    <label for="product_material" class="form-label">Material</label>
                                    <input type="text" placeholder="Type here" class="form-control"
                                        name="ProductMaterial" required onblur="validateProductMaterial()" />

                                    <span id="ProductMaterial-error" class="error-message"></span>
                                </div>
                                <div class="mb-4">
                                    <label for="product_caseSize" class="form-label">Case Size</label>
                                    <select class="form-select" name="ProductCaseSize" required
                                        onchange="validateProductCaseSize()">
                                        <option value="">Select Case Size</option>
                                        <option value="Large">Large</option>
                                        <option value="Medium">Medium</option>
                                        <option value="Small">Small</option>
                                    </select>
                                    <span id="ProductCaseSize-error" class="error-message"></span>
                                </div>



                                <!-- <div class="mb-4">
                                    <label class="form-label">Count In Stock</label>
                                    <input type="number" placeholder="Type here" name="ProductStock" class="form-control" min="0" max="300" required />
                                    <span id="countInStock-error" class="error-message"></span>
                                </div> -->



                            </div>
                        </div>
                        <!-- card end// -->
                        <div class="card mb-4">
                            <div class="card-body">
                                <div>
                                    <label class="form-label">Description</label>
                                    <textarea placeholder="Type here" class="form-control" name="ProductDetails"
                                        rows="4" required onblur="validateProductDetails()"></textarea>
                                    <span id="productDetails-error" class="error-message"></span>
                                </div>
                            </div>
                        </div>
                        <!-- card end// -->
                        <div class="card mb-4">
                            <div class="card-body">
                                <div>
                                    <label class="form-label">Images (Up to 4 images)</label>
                                    <input class="form-control" type="file" multiple name="ProductImage"
                                        accept="image/*" onchange="limitFiles(this, 4)" required />
                                </div>
                            </div>
                        </div>
                        <!-- card end// -->
                    </div>
                    <div class="col-lg-3">
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="mb-4">
                                    <label class="form-label">Price</label>
                                    <input type="text" placeholder="Type here" name="ProductPrice" id="productPrice"
                                        class="form-control" required onblur="validateProductPrice()" />
                                    <span id="productPrice-error" class="error-message"></span>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Discount Percentage</label>
                                    <input type="number" placeholder="Type here" name="DiscountPercentage"
                                        class="form-control" min="0" max="80" value="0"
                                        onblur="validateDiscountPercentage()" />
                                    <span id="discountPercentage-error" class="error-message"></span>

                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Offer Price</label>
                                    <input type="text" placeholder="Type here" name="ProductOffPrice"
                                        id="ProductOffprice" class="form-control" required
                                        onblur="validateProductOffPrice()" />
                                    <span id="ProductOffprice-error" class="error-message"></span>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Count In Stock</label>
                                    <input type="number" placeholder="Type here" name="ProductStock"
                                        class="form-control" min="0" max="300" required
                                        oninput="this.value = this.value.replace(/[^0-9]/g, '')"
                                        onblur="validateProductStock()" />
                                    <span id="countInStock-error" class="error-message"></span>
                                </div>
                                <div class="mb-4">
                                    <h5 class="mb-3">Status</h5>
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="listed" id="status1"
                                            value="false" checked>
                                        <label class="form-check-label" for="status1">Unlisted</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="listed" id="status2"
                                            value="true">
                                        <label class="form-check-label" for="status2">Listed</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </section>
        </form>


        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>
                        document.write(new Date().getFullYear());
                    </script>
                    ©,
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">All rights reserved</div>
                </div>
            </div>
        </footer>
    </main>
    <script src="/adminassets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/adminassets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/adminassets/js/vendors/select2.min.js"></script>
    <script src="/adminassets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/adminassets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="/adminassets/js/main.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <script>

        function limitFiles(input, maxFiles) {
            var files = input.files;
            if (files.length > maxFiles) {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "You can only upload a maximum of " + maxFiles + " files.",

                });
                // alert("You can only upload a maximum of " + maxFiles + " files.");
                input.value = "";
            }
        }


        document.getElementById("productPrice").addEventListener("input", function () {
            var priceInput = document.getElementById("productPrice");
            var price = parseFloat(priceInput.value);
            if (isNaN(price) || price <= 0 || (!/^\d+(\.\d{1,2})?$/.test(price))) {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Please enter a valid, non-negative price.",

                });
                // alert("Please enter a valid, non-negative price.");
                priceInput.value = "";
            }
        });



        function fetchCategoriesAndUpdateDropdown() {
            fetch('/categories')
                .then(response => response.json())
                .then(categories => {
                    const categoryDropdown = document.getElementById('categoryDropdown');
                    categoryDropdown.innerHTML = ''; // Clear existing options
                    categories.forEach(category => {
                        const listItem = document.createElement('li');
                        listItem.innerHTML = `<a class="dropdown-item" href="#" data-id="${category._id}">${category.name}</a>`;
                        categoryDropdown.appendChild(listItem);
                    });
                })
                .catch(error => console.error('Error fetching categories:', error));
        }

        // Call the function to fetch and update categories when the page loads
        document.addEventListener('DOMContentLoaded', fetchCategoriesAndUpdateDropdown);


        document.addEventListener('click', function (event) {
            const target = event.target;
            if (target.classList.contains('dropdown-item')) {
                const categoryId = target.getAttribute('data-id');
                const categoryName = target.textContent;
                const categoryInput = document.getElementById('categoryInput');
                categoryInput.value = categoryName;
                categoryInput.setAttribute('data-id', categoryId);
            }
        });





    </script>


    <script>
        // JavaScript to handle the calculation of offprice based on price and discountPercentage
        document.addEventListener('DOMContentLoaded', function () {
            const priceInput = document.getElementById('productPrice');
            const discountInput = document.getElementsByName('DiscountPercentage')[0];
            const offpriceInput = document.getElementById('ProductOffprice');

            // Function to update offprice when either price or discountPercentage changes
            function updateOffprice() {
                const price = parseFloat(priceInput.value) || 0;
                const discountPercentage = parseFloat(discountInput.value) || 0;
                const offprice = price - (price * discountPercentage / 100);
                offpriceInput.value = offprice.toFixed(2);
            }

            // Attach event listeners to update offprice on input changes
            priceInput.addEventListener('input', updateOffprice);
            discountInput.addEventListener('input', updateOffprice);
        });
    </script>



    <script>

        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("submitform");
            const submitButton = document.getElementById("submitButtonId");

            form.addEventListener("submit", function (event) {
                event.preventDefault();

                if (validateForm()) {
                    form.submit();
                } else {
                    // Display error message or handle invalid form
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Please fill out all required fields correctly.",
                    });

                }
            });

            function validateForm() {
                const isProductNameValid = validateProductName();
                const isProductBrandValid = validateProductBrand();
                const isProductCategoryValid = validateProductCategory();
                const isProductColorValid = validateProductColor();
                const isProductMaterialValid = validateProductMaterial();
                const isProductCaseSizeValid = validateProductCaseSize();
                const isProductDetailsValid = validateProductDetails();
                const isProductPriceValid = validateProductPrice();
                const isProductOffPriceValid = validateProductOffPrice();
                const isProductStockValid = validateProductStock();
                const isDiscountPercentageValid = validateDiscountPercentage();

                return isProductNameValid && isProductBrandValid && isProductCategoryValid &&
                    isProductColorValid && isProductMaterialValid && isProductCaseSizeValid &&
                    isProductDetailsValid && isProductPriceValid && isProductOffPriceValid &&
                    isProductStockValid && isDiscountPercentageValid;
            }

            // Your existing validation functions here...

            function validateProductName() {
                const productName = document.getElementsByName("ProductName")[0].value.trim();
                const productNameError = document.getElementById("productTitle-error");
                const nameRegex = /^[A-Za-z\s]*$/;
                if (productName === '') {
                    productNameError.textContent = "Product name is required";
                    return false; // Invalid input, return false
                } else if (!nameRegex.test(productName)) {
                    productNameError.textContent = "Invalid Name: Only alphabets and spaces are allowed";
                    return false; // Invalid input, return false
                } else {
                    productNameError.textContent = "";
                    console.log("name")
                    return true; // Valid input, return true
                }
            }

            function validateProductBrand() {
                const productBrand = document.getElementsByName("ProductBrand")[0].value.trim();
                const productBrandError = document.getElementById("ProductBrand-error");
                const nameRegex = /^[A-Za-z\s]*$/;
                if (productBrand === '') {
                    productBrandError.textContent = "Product brand is required";
                    return false; // Invalid input, return false
                } else if (!nameRegex.test(productBrand)) {
                    productBrandError.textContent = "Invalid Brand: Only alphabets and spaces are allowed";
                    return false; // Invalid input, return false
                } else {
                    productBrandError.textContent = "";
                    console.log("brand")
                    return true; // Valid input, return true
                }
            }

            function validateProductCategory() {
                const productCategory = document.getElementsByName("ProductCategory")[0].value;
                const productCategoryError = document.getElementById("ProductCategory-error");
                if (productCategory === '') {
                    productCategoryError.textContent = "Product category is required";
                    return false;
                } else {
                    productCategoryError.textContent = "";

                    console.log("cate")
                    return true;
                }
            }

            function validateProductColor() {
                const productColor = document.getElementsByName("ProductColor")[0].value.trim();
                const productColorError = document.getElementById("ProductColor-error");
                const nameRegex = /^[A-Za-z\s]*$/;
                if (productColor === '') {
                    productColorError.textContent = "Product color is required";
                    return false; // Invalid input, return false
                } else if (!nameRegex.test(productColor)) {
                    productColorError.textContent = "Invalid Color: Only alphabets and spaces are allowed";
                    return false; // Invalid input, return false
                } else {
                    productColorError.textContent = "";
                    console.log("color")
                    return true; // Valid input, return true
                }
            }

            function validateProductMaterial() {
                const productMaterial = document.getElementsByName("ProductMaterial")[0].value.trim();
                const productMaterialError = document.getElementById("ProductMaterial-error");
                const nameRegex = /^[A-Za-z\s]*$/;
                if (productMaterial === '') {
                    productMaterialError.textContent = "Product material is required";
                    return false; // Invalid input, return false
                } else if (!nameRegex.test(productMaterial)) {
                    productMaterialError.textContent = "Invalid Material: Only alphabets and spaces are allowed";
                    return false; // Invalid input, return false
                } else {
                    productMaterialError.textContent = "";

                    console.log("mate")
                    return true; // Valid input, return true
                }
            }
            function validateProductCaseSize() {
                const productCaseSize = document.getElementsByName("ProductCaseSize")[0].value;
                const productCaseSizeError = document.getElementById("ProductCaseSize-error");
                if (productCaseSize === '') {
                    productCaseSizeError.textContent = "Product case size is required";
                    return false;
                } else {
                    productCaseSizeError.textContent = "";

                    console.log("case")
                    return true;
                }
            }

            function validateProductDetails() {
                const productDetails = document.getElementsByName("ProductDetails")[0].value.trim();
                const productDetailsError = document.getElementById("productDetails-error");
                if (productDetails === '') {
                    productDetailsError.textContent = "Product description is required";
                    return false;
                } else {
                    productDetailsError.textContent = "";
                    console.log("detail")

                    return true;
                }
            }

            function validateProductPrice() {
                const productPrice = document.getElementsByName("ProductPrice")[0].value.trim();
                const productPriceError = document.getElementById("productPrice-error");
                if (productPrice === '') {
                    productPriceError.textContent = "Product price is required";
                    return false;
                } else {
                    productPriceError.textContent = "";
                    console.log("price")

                    return true;
                }
            }

            function validateProductOffPrice() {
                const productOffPrice = document.getElementsByName("ProductOffPrice")[0].value.trim();
                const productOffPriceError = document.getElementById("ProductOffprice-error");
                if (productOffPrice === '') {
                    productOffPriceError.textContent = "Product offer price is required";
                    return false;
                } else {
                    productOffPriceError.textContent = "";
                    console.log("offer")

                    return true;
                }
            }

            function validateDiscountPercentage() {
                const discountInput = document.getElementsByName('DiscountPercentage')[0];
                const discountError = document.getElementById('discountPercentage-error');
                const discountPercentage = parseFloat(discountInput.value);
                console.log(discountPercentage)

                if (isNaN(discountPercentage)) {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Discount percentage must be a number",
                    });
                    discountError.textContent = 'Discount percentage must be a number';
                } else if (discountPercentage < 0) {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Discount percentage cannot be negative",
                    });
                    discountError.textContent = 'Discount percentage cannot be negative';
                } else if (discountPercentage > 80) {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Discount percentage cannot be greater than 80",
                    });
                    discountError.textContent = 'Discount percentage cannot be greater than 80';
                } else {
                    discountError.textContent = ''; // Clear the error message if the input is valid
                    console.log('percent');
                    return true
                }
            }
            function validateProductStock() {
                const productStockInput = document.getElementsByName("ProductStock")[0];
                const productStock = parseInt(productStockInput.value.trim());
                const productStockError = document.getElementById("countInStock-error");

                if (isNaN(productStock)) {
                    productStockError.textContent = "Product stock count must be a number";
                } else if (productStock < 0) {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Product stock count cannot be negative"
                    });
                    productStockError.textContent = "Product stock count cannot be negative";
                } else {
                    productStockError.textContent = "";
                    console.log('stock');
                    return true;
                }
            }

        });


    </script>








</body>

<!-- Mirrored from wp.alithemes.com/html/evara/evara-backend/page-form-product-3.html by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 01 Aug 2021 15:33:32 GMT -->

</html>